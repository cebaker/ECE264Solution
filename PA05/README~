Description:
  In the first part of PA05 we deal with decoding a Huffman Encoded file header.
My Functions:
  
  CheckArgCount(int argc): This function checks to see if the number of arguments given to the program is enough.  If the number of arguments is not enough the program will exit with an error printf statement.
  
  OpenFile(char FileName[],char mode[]):The OpenFile function will open a file and return a pointer to the beginning of the file.
  
  ResetFilePointer(FILE* fptr): This function tries to reset the filepointer.  All that is in this function is fseek. Even though this funciton only has a small job it is still important to keep this as a function so that we may use it later.
  
  nodeconstruct(int key): This funciton will create a node with a left and a right child.

  destroyleaf(LLIST *leaf): This function destroy's the leaf or the node that is currently being used and points to the next one in line to ecome the head.
  
  SNodeCreate(LEAF* lptr, LLIST*head): This function creates a linked list or a stack that produces a new head everytime that this function is called.
 
  headerfileread(FILE* fptr): This function essentially does every thing that ipa2_1 was suppose to do. it calles all the funciton's and creates the tree that is suppose to be made.

  SNodeDestruct(LLIST* node): this function does destroy the  what SNodecreate makes. SNodecreate is sort of like a push onto the stack and SNodeDestruct is a pop off of the stack.

  PrintError(int error):  The PrintError function will simply be called to print all of the error messages that are seen by the program.

  CloseFile(FILE* fptr): The CloseFile function simply closes the file with fclose and the file pointer.

  DestroySnode(LEAF* tree):  this funciton is different from SNodeDestruct because this function dosent push off of the stack but it in fact free's the memory in a recursive way.

   